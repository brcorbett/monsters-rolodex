{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","id","alt","src","name","email","CardList","monsters","map","index","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","onSearchChange","bind","fetch","then","response","json","users","setState","e","this","target","value","title","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAGaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACC,sBAAKC,UAAU,iBAAiBC,GAAIF,EAAQE,GAA5C,UACC,qBACCC,IAAI,UACJC,IAAG,+BAA0BJ,EAAQE,GAAlC,4BAEJ,6BAAKF,EAAQK,OACb,4BAAIL,EAAQM,YCPFC,G,MAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACC,qBAAKP,UAAU,YAAf,SACEO,EAASC,KAAI,SAACT,EAASU,GAAV,OACb,cAAC,EAAD,CAAkBV,QAASA,GAAhBU,UCLFC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACxB,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCGG,G,wDArCd,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACZT,SAAU,GACVU,YAAa,IAEd,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBANT,E,qDASd,WAAqB,IAAD,OACnBC,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAElB,SAAUiB,S,4BAG7C,SAAeE,GACdC,KAAKF,SAAS,CAAER,YAAaS,EAAEE,OAAOC,MAAOC,MAAOJ,EAAEE,OAAOC,U,oBAG9D,WACC,MAAkCF,KAAKX,MAA/BT,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZc,EAAmBxB,EAASyB,QAAO,SAACjC,GAAD,OACxCA,EAAQK,KAAK6B,cAAcC,SAASjB,EAAYkB,wBAEjD,OACC,sBAAKnC,UAAU,MAAf,UACC,gDACA,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAce,KAAKT,iBAEpB,cAAC,EAAD,CAAUX,SAAUwB,W,GAhCNK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e360213.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = ({ monster }) => {\n\treturn (\n\t\t<div className=\"card-container\" id={monster.id}>\n\t\t\t<img\n\t\t\t\talt=\"monster\"\n\t\t\t\tsrc={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n\t\t\t></img>\n\t\t\t<h2>{monster.name}</h2>\n\t\t\t<p>{monster.email}</p>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { Card } from \"../card/card.component\";\nimport \"./card-list.styles.css\";\n\nexport const CardList = ({ monsters }) => {\n\treturn (\n\t\t<div className=\"card-list\">\n\t\t\t{monsters.map((monster, index) => (\n\t\t\t\t<Card key={index} monster={monster} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n\t<input\n\t\tclassName=\"search\"\n\t\ttype=\"search\"\n\t\tplaceholder={placeholder}\n\t\tonChange={handleChange}\n\t/>\n);\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: \"\",\n\t\t};\n\t\tthis.onSearchChange = this.onSearchChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n\tonSearchChange(e) {\n\t\tthis.setState({ searchField: e.target.value, title: e.target.value });\n\t}\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monster Frenzy</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"search monsters\"\n\t\t\t\t\thandleChange={this.onSearchChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}